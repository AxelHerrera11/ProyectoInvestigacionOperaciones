/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.ControladorMetodoGrafico;
import controlador.ControladorMetodoSimplex;
import controlador.ControladorMetodoTransporte;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Rectangle;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicComboBoxUI;
import modelo.ModeloMetodoGrafico;
import modelo.ModeloMetodoSimplex;

/**
 *
 * @author Omega03
 */
public class VistaMetodoTransporte extends javax.swing.JPanel {
 

    public JPanel panelGrafico;
   

    public VistaMetodoTransporte() {
        initComponents();
        ControladorMetodoTransporte controlador = new ControladorMetodoTransporte(this);
        setControlador(controlador);

 
    }

 public void mostrarDatosDeEntrada(int[][] costos, int[] oferta, int[] demanda) {
    // Si usas el constructor de tu vista para crear el controlador, 
    // asegúrate de que estas importaciones están al inicio del archivo:
    // import java.awt.Color;
    // import java.awt.GridLayout;
    // import javax.swing.JLabel;
    // import javax.swing.BorderFactory;
    // import javax.swing.SwingConstants;
    
    panelTabla.removeAll();
    
    int filas = costos.length;
    int columnas = costos[0].length;
    
    // Cuadrícula: (Filas de Costos + 2) x (Columnas de Destinos + 2)
    panelTabla.setLayout(new GridLayout(filas + 2, columnas + 2, 2, 2));

    // Fila 1: Encabezados de Destinos
    panelTabla.add(crearEtiqueta(" ", Color.LIGHT_GRAY, Color.BLACK));
    for (int j = 0; j < columnas; j++) {
        panelTabla.add(crearEtiqueta("D" + (j + 1), Color.LIGHT_GRAY, Color.BLACK));
    }
    panelTabla.add(crearEtiqueta("Oferta", Color.DARK_GRAY, Color.WHITE));

    // Filas de Costos y Oferta
    for (int i = 0; i < filas; i++) {
        panelTabla.add(crearEtiqueta("F" + (i + 1), Color.LIGHT_GRAY, Color.BLACK));
        // Celdas de Costos (el cuerpo de la tabla)
        for (int j = 0; j < columnas; j++) {
            panelTabla.add(crearEtiqueta(String.valueOf(costos[i][j]), Color.WHITE, Color.BLACK));
        }
        // Valor de Oferta
        panelTabla.add(crearEtiqueta(String.valueOf(oferta[i]), new Color(153, 204, 255), Color.BLACK)); 
    }
    
    // Última Fila: Demanda
    panelTabla.add(crearEtiqueta("Demanda", Color.DARK_GRAY, Color.WHITE));
    for (int j = 0; j < columnas; j++) {
        panelTabla.add(crearEtiqueta(String.valueOf(demanda[j]), new Color(255, 153, 153), Color.BLACK)); 
    }
    panelTabla.add(crearEtiqueta("Total", Color.DARK_GRAY, Color.WHITE)); // Celda inferior derecha

    panelTabla.revalidate();
    panelTabla.repaint();
}

/**
 * Método auxiliar para crear una JLabel con estilo.
 */
private JLabel crearEtiqueta(String texto, Color fondo, Color textoColor) {
    JLabel label = new JLabel(texto, SwingConstants.CENTER);
    label.setOpaque(true);
    label.setBackground(fondo);
    label.setForeground(textoColor);
    label.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    return label;
}
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        panelTabla = new javax.swing.JPanel();
        panelTablaResultados = new javax.swing.JPanel();
        btnCalcular = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDatos = new javax.swing.JTextArea();
        txtResultado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1040, 720));
        setMinimumSize(new java.awt.Dimension(1040, 720));
        setPreferredSize(new java.awt.Dimension(1040, 720));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        panelFondo.setBackground(new java.awt.Color(244, 246, 248));
        panelFondo.setMaximumSize(new java.awt.Dimension(1040, 720));
        panelFondo.setMinimumSize(new java.awt.Dimension(1040, 720));
        panelFondo.setPreferredSize(new java.awt.Dimension(1040, 720));
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(244, 246, 248));
        jPanel1.setForeground(new java.awt.Color(27, 38, 59));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("60s Scoreboard", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(36, 59, 85));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Método hola");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(36, 59, 85)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 50));

        panelFondo.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 50));

        cmbTipo.setBackground(new java.awt.Color(244, 246, 248));
        cmbTipo.setFont(new java.awt.Font("60s Scoreboard", 1, 12)); // NOI18N
        cmbTipo.setForeground(new java.awt.Color(36, 59, 85));
        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Costo Mínimo", "Esquina Noroeste", "Aproximación de Vogel" }));
        cmbTipo.setToolTipText("");
        cmbTipo.setBorder(null);
        panelFondo.add(cmbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 170, 30));
        // quitar borde estándar
        cmbTipo.setBorder(BorderFactory.createEmptyBorder());

        // aplicar solo borde inferior
        //cmbTipo.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(0x1565C0)));

        // fondo y texto
        cmbTipo.setUI(new javax.swing.plaf.basic.BasicComboBoxUI());
        cmbTipo.setUI(new BasicComboBoxUI() {
            @Override
            public void paintCurrentValueBackground(Graphics g, Rectangle bounds, boolean hasFocus) {
                // Evita que pinte un fondo gris feo
                g.setColor(cmbTipo.getBackground());
                g.fillRect(bounds.x, bounds.y, bounds.width, bounds.height);
            }
        });

        cmbTipo.setUI(new BasicComboBoxUI() {
            @Override
            protected JButton createArrowButton() {
                JButton button = new JButton("▼");
                button.setBorder(BorderFactory.createEmptyBorder());
                button.setContentAreaFilled(false);
                button.setForeground(new Color(36,59,85)); // color de la flecha
                return button;
            }
        });

        panelTabla.setBackground(new java.awt.Color(204, 204, 204));
        panelFondo.add(panelTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 600, 400));

        panelTablaResultados.setBackground(new java.awt.Color(204, 204, 204));
        panelFondo.add(panelTablaResultados, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, 360, 400));

        btnCalcular.setBackground(new java.awt.Color(21, 101, 192));
        btnCalcular.setMaximumSize(new java.awt.Dimension(240, 100));
        btnCalcular.setMinimumSize(new java.awt.Dimension(240, 100));
        btnCalcular.setPreferredSize(new java.awt.Dimension(240, 100));
        btnCalcular.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("60s Scoreboard", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CalculaR");
        btnCalcular.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        panelFondo.add(btnCalcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 110, 150, 30));

        txtDatos.setColumns(20);
        txtDatos.setRows(5);
        jScrollPane1.setViewportView(txtDatos);

        panelFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 600, 170));

        txtResultado.setBackground(new java.awt.Color(244, 246, 248));
        txtResultado.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtResultado.setForeground(new java.awt.Color(36, 59, 85));
        txtResultado.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(36, 59, 85)));
        panelFondo.add(txtResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 260, 200, 30));

        jLabel3.setFont(new java.awt.Font("60s Scoreboard", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(36, 59, 85));
        jLabel3.setText("Resultado:");
        panelFondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, 100, -1));

        add(panelFondo);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel btnCalcular;
    public javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelFondo;
    public javax.swing.JPanel panelTabla;
    public javax.swing.JPanel panelTablaResultados;
    public javax.swing.JTextArea txtDatos;
    public javax.swing.JTextField txtResultado;
    // End of variables declaration//GEN-END:variables

 public void setControlador(ControladorMetodoTransporte controlador) {
      // btnCalcular es un JPanel, no un JButton, así que usamos MouseListener
      this.btnCalcular.addMouseListener(controlador);
    }


    // Mostrar la tabla de asignación en el panel
    public void mostrarTabla(int[][] asignacion) {
        panelTablaResultados.removeAll();
        int filas = asignacion.length;
        int columnas = asignacion[0].length;
        panelTablaResultados.setLayout(new GridLayout(filas, columnas, 2, 2));

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                JLabel celda = new JLabel(String.valueOf(asignacion[i][j]), SwingConstants.CENTER);
                celda.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                panelTablaResultados.add(celda);
            }
        }

        panelTablaResultados.revalidate();
        panelTablaResultados.repaint();
    }

   // Dentro de VistaMetodoTransporte.java

// Dentro de VistaMetodoTransporte.java

public void mostrarResultado(int[][] asignacion, int[][] costosOriginales) {
    long costoTotal = 0;
    
    // Aseguramos que las matrices no estén vacías
    if (asignacion == null || asignacion.length == 0 || costosOriginales == null || costosOriginales.length == 0) {
        txtResultado.setText("Error: No hay asignaciones o costos.");
        return;
    }
    
    int filas = asignacion.length;
    int columnas = asignacion[0].length;
    
    // El costo total es la suma de (Asignación * Costo) para cada celda.
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            // Utilizamos 'long' para evitar desbordamiento, aunque no debería ocurrir aquí.
            costoTotal += (long)asignacion[i][j] * costosOriginales[i][j];
        }
    }
    
    // Mostrar el resultado en el campo de texto.
    // Confirma que 'txtResultado' es el nombre correcto de tu campo de texto.
    txtResultado.setText("Costo Total: " + costoTotal);
}
}